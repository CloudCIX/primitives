{
{# Namespace definition #}
sudo ip netns add {{ namespace_identifier }}
sudo ip netns exec {{ namespace_identifier }} ip link set dev lo up
{# ------------------------------------------------------------------------------------------------------------- #}
{# North of Namespace: IPv4 #}
{% if ip is not none %}
{% set bridge_name = 'br-' + bridge_identifier %}

{# connection between IPv4 Floating Subnet bridge and Namespace #}
sudo ip link add {{ bridge_identifier }}.{{ namespace_identifier }} type veth peer name {{ namespace_identifier }}.{{ bridge_identifier }}
sudo ip link set {{ bridge_identifier }}.{{ namespace_identifier }} master {{ bridge_name }}
sudo ip link set dev {{ bridge_identifier }}.{{ namespace_identifier }} up
sudo ip link set {{ namespace_identifier }}.{{ bridge_identifier }} netns {{ namespace_identifier }}

{# add public ip addresses to the namespace interface, this includes vrf_ip and nat public ips #}
{% for address in ip['addresses'] %}
sudo ip netns exec {{ namespace_identifier }} ip addr add {{ address }}/{{ ip['mask'] }} dev {{ namespace_identifier }}.{{ bridge_identifier }}
{% endfor %}

{# outbound route #}
sudo ip netns exec {{ namespace_identifier }} ip route add default via {{ ip['gateway'] }} metric 512

{# Finally set the namespace IPv4 Floating IP interface UP #}
sudo ip netns exec {{ namespace_identifier }} ip link set dev {{ namespace_identifier }}.{{ bridge_identifier }} up
{% endif %}
{# ------------------------------------------------------------------------------------------------------------- #}
{# North of Namespace: IPv6 #}
{% if ip6 is not none %}
{% set bridge6_name = 'br-' + bridge6_identifier %}

{# connection between IPv6 Link Subnet bridge and Namespace #}
sudo ip link add {{ bridge6_identifier }}.{{ namespace_identifier }} type veth peer name {{ namespace_identifier }}.{{ bridge6_identifier }}
sudo ip link set {{ bridge6_identifier }}.{{ namespace_identifier }} master {{ bridge6_name }}
sudo ip link set dev {{ bridge6_identifier }}.{{ namespace_identifier }} up
sudo ip link set {{ namespace_identifier }}.{{ bridge6_identifier }} netns {{ namespace_identifier }}

{# add ipv6 addresses to the namespace interface, this includes ipv6 link address and any other ipv6 addresses #}
{% for address6 in ip6['addresses'] %}
sudo ip netns exec {{ namespace_identifier }} ip -6 addr add {{ address6 }}/{{ ip6['mask'] }} dev {{ namespace_identifier }}.{{ bridge6_identifier }}
{% endfor %}

{# outbound route for IPv6 #}
sudo ip netns exec {{ namespace_identifier }} ip -6 route add ::/0 via {{ ip6['gateway'] }} metric 1024

{# Finally set the namespace IPv6 Floating IP interface UP #}
sudo ip netns exec {{ namespace_identifier }} ip link set dev {{ namespace_identifier }}.{{ bridge6_identifier }} up

{% endif %}
{# ------------------------------------------------------------------------------------------------------------- #}
{# South of Namespace: IPv4 and IPv6 #}
{% for network in namespace_networks %}

{# create a vlan tagged logical interface from podnet private interface and connect to namespace  #}
sudo ip link add link {{ private_ifname }} name {{ private_ifname }}.{{ network['vlan'] }} type vlan id {{ network['vlan'] }}
sudo ip link set dev {{ private_ifname }}.{{ network['vlan'] }} netns {{ namespace_identifier }}
sudo ip link set dev {{ private_ifname }}.{{ network['vlan'] }} up

{# add network addresses ip and/or ip6 to the network interface and finally set it up #}
{% if network['private_address_range'] defined %}
sudo ip netns exec {{ namespace_identifier }} ip addr add {{ network['private_address_range'] }} dev {{ private_ifname }}.{{ network['vlan'] }}
{% endif %}

{% if network['ip6_address_range'] defined %}
sudo ip netns exec {{ namespace_identifier }} ip -6 addr add {{ network['ip6_address_range'] }} dev {{ private_ifname }}.{{ network['vlan'] }}
{# add an inbound route for Namespace network /64 subnet in Global Routes #}
sudo ip -6 route add {{ network['ip6_address_range'] }} via {{ ip6['address'] }}
{% endif %}

{% endfor %}
{# ------------------------------------------------------------------------------------------------------------- #}
{# enabling route forwarding #}
sudo ip netns exec {{ namespace_identifier }} sysctl --write net.ipv4.ip_forward=1
sudo ip netns exec {{ namespace_identifier }} sysctl --write net.ipv6.conf.all.forwarding=1
echo "massages['000']"
}
