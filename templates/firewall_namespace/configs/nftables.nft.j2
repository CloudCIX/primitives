#!/usr/sbin/nft -f

# Flush the exists rule set if any
flush ruleset

# Logging format setup
log prefix "{{ log['prefix'] }}: " level {{ log['level'] }} ip saddr ip daddr tcp dport

table inet ns_firewall {
{# ----------------------------------------------------------------------- #}
{% if dnat_rules|length > 0 %}
    # Pre-Routing, Inbount NAT (DNAT), Only IPv4
    chain prerouting {
        type nat hook prerouting priority dstnat; policy accept;
        # Inbound destination NAT 1:1
{% for rule in dnat_rules %}
        {{ rule }}
{% endfor %}
    }
{% endif %}
{# ----------------------------------------------------------------------- #}
    # Traffic TO Namespace IPv4 and IPv6
    chain input {
        type filter hook input priority filter; policy drop;
{% for rule in inbound_rules %}
        {{ rule }}
{% endfor %}
    }
{# ---------------------------------------------------------------------- #}
    # Traffic TO and FROM VMs in Namespace Networks, IPv4 and IPv6
    chain forward {
        type filter hook forward priority filter; policy drop;

        # Forwarding INBOUND: Namespace Network Inbound
{% for rule in inbound_forward_rules %}
        {{ rule }}
{% endfor %}

        # Forwarding OUTBOUND: Namespace Outbound
{% for rule in outbound_forward_rules %}
        {{ rule }}
{% endfor %}
    }
{# ---------------------------------------------------------------------- #}
    # Traffic FROM Namespace IPv4 and IPv6
    chain output {
        type filter hook output priority 0; policy drop;
{% for rule in outbound_rules %}
        {{ rule }}
{% endfor %}
    }
{# ---------------------------------------------------------------------- #}
{% if snat_rules|length > 0 %}
    # Post-Routing, Outbound NAT(SNAT), Only IPv4
    chain postrouting {
        type nat hook postrouting priority srcnat; policy accept;
        # Source NAT 1:N
    {% for nat in snat_rules %}
        {{ nat }}
    {% endfor %}
    }
{% endif %}
}
